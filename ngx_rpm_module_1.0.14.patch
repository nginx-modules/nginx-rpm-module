diff -urN nginx-1.0.14/src/event/ngx_event.c nginx-1.0.14_edits/src/event/ngx_event.c
--- nginx-1.0.14/src/event/ngx_event.c	2012-07-24 13:46:20.641997619 +0000
+++ nginx-1.0.14_edits/src/event/ngx_event.c	2012-07-24 12:04:22.766151286 +0000
@@ -72,7 +72,8 @@
 ngx_atomic_t  *ngx_stat_reading = &ngx_stat_reading0;
 ngx_atomic_t   ngx_stat_writing0;
 ngx_atomic_t  *ngx_stat_writing = &ngx_stat_writing0;
-
+ngx_atomic_t   ngx_stat_500s0;
+ngx_atomic_t  *ngx_stat_500s = &ngx_stat_500s0;
 #endif
 
 
@@ -504,7 +505,8 @@
            + cl          /* ngx_stat_requests */
            + cl          /* ngx_stat_active */
            + cl          /* ngx_stat_reading */
-           + cl;         /* ngx_stat_writing */
+           + cl          /* ngx_stat_writing */
+           + cl;         /* ngx_stat_500s */ 
 
 #endif
 
@@ -550,7 +552,7 @@
     ngx_stat_active = (ngx_atomic_t *) (shared + 6 * cl);
     ngx_stat_reading = (ngx_atomic_t *) (shared + 7 * cl);
     ngx_stat_writing = (ngx_atomic_t *) (shared + 8 * cl);
-
+    ngx_stat_500s = (ngx_atomic_t *) (shared + 9 *cl);
 #endif
 
     return NGX_OK;
diff -urN nginx-1.0.14/src/event/ngx_event.h nginx-1.0.14_edits/src/event/ngx_event.h
--- nginx-1.0.14/src/event/ngx_event.h	2012-07-24 13:46:20.640996521 +0000
+++ nginx-1.0.14_edits/src/event/ngx_event.h	2012-07-24 12:04:29.256154809 +0000
@@ -517,6 +517,7 @@
 extern ngx_atomic_t  *ngx_stat_active;
 extern ngx_atomic_t  *ngx_stat_reading;
 extern ngx_atomic_t  *ngx_stat_writing;
+extern ngx_atomic_t  *ngx_stat_500s;
 
 #endif
 
diff -urN nginx-1.0.14/src/http/modules/ngx_http_stub_status_module.c nginx-1.0.14_edits/src/http/modules/ngx_http_stub_status_module.c
--- nginx-1.0.14/src/http/modules/ngx_http_stub_status_module.c	2012-07-24 13:46:20.636987677 +0000
+++ nginx-1.0.14_edits/src/http/modules/ngx_http_stub_status_module.c	2012-07-24 12:05:18.615141902 +0000
@@ -65,6 +65,7 @@
     ngx_buf_t         *b;
     ngx_chain_t        out;
     ngx_atomic_int_t   ap, hn, ac, rq, rd, wr;
+    ngx_atomic_int_t fe;
 
     if (r->method != NGX_HTTP_GET && r->method != NGX_HTTP_HEAD) {
         return NGX_HTTP_NOT_ALLOWED;
@@ -91,7 +92,8 @@
     size = sizeof("Active connections:  \n") + NGX_ATOMIC_T_LEN
            + sizeof("server accepts handled requests\n") - 1
            + 6 + 3 * NGX_ATOMIC_T_LEN
-           + sizeof("Reading:  Writing:  Waiting:  \n") + 3 * NGX_ATOMIC_T_LEN;
+           + sizeof("Reading:  Writing:  Waiting:  \n") + 3 * NGX_ATOMIC_T_LEN
+           + sizeof("500s:  \n") + NGX_ATOMIC_T_LEN;
 
     b = ngx_create_temp_buf(r->pool, size);
     if (b == NULL) {
@@ -107,6 +109,7 @@
     rq = *ngx_stat_requests;
     rd = *ngx_stat_reading;
     wr = *ngx_stat_writing;
+    fe = *ngx_stat_500s;
 
     b->last = ngx_sprintf(b->last, "Active connections: %uA \n", ac);
 
@@ -118,6 +121,8 @@
     b->last = ngx_sprintf(b->last, "Reading: %uA Writing: %uA Waiting: %uA \n",
                           rd, wr, ac - (rd + wr));
 
+    b->last = ngx_sprintf(b->last, "500s: %uA \n", fe);
+
     r->headers_out.status = NGX_HTTP_OK;
     r->headers_out.content_length_n = b->last - b->pos;
 
